type Query {
    countries: [Country]
    countryBy(field: String!, value: String!): Country

    certifierBy(field: String!, value: String!): Certifier
    projectBy(field: String!, value: String!): Project

    getGlobalData: GlobalData,
    getProjectedDecarbonation(viewType: ProjectedDecarbonationViewType): [ProjectedDecarbonationGraph]
    getProjectedDecarbonationTable(pagination: Pagination): ProjectedDecarbonationWithPagination
    getProjectFundingAllocation(pagination: Pagination): ProjectedFundingAllocationWithPagination
    getProjectMetrics: ProjectMetrics!
    getImpactMetrics: ImpactMetrics!
}

type Map {
    key: String!
    value: String!
}

type StrIntMap {
    key: String!
    value: Int!
}

type Sdg {
    number: Int!
    name: String!
}

enum ProjectedDecarbonationViewType {
    OFFSET_TYPE
    PROJECT_TYPE
    INVESTMENT_TYPE
}

type GlobalData {
    total_invested: String!
    generated_cc: String!
    forecasted_cc: String!
    retired_cc: String!
}

type ProjectedDecarbonation {
    year: String!
    emissions: String!
    received_cc: String!
    purchased_cc: String!
    forward_cc: String!
    retired_cc: String!
    target: String!
    delta: String
}

type ProjectedDecarbonationGraph {
    year: String!
    emissions: Int!
    target: Int!
    data: [StrIntMap]!
}

type ProjectedDecarbonationWithPagination {
    data: [ProjectedDecarbonation!]!
    pagination: PaginationObject
}

type ProjectFundingAllocation {
    id: ID!
    name: String!
    color: String!
    allocation:  String!
    generated_cc: String!
    forwarded_cc: String!
    comitted_cc: String!
    retired_cc: String!
}

type ProjectedFundingAllocationWithPagination {
    data: [ProjectFundingAllocation!]!
    pagination: PaginationObject
}

type ProjectMetrics {
    colors: ProjectColorRepartition!
    types: ProjectTypeRepartition!
    standards: [Map!]!
    localization: [LocalizationRepartition!]!
}

type LocalizationRepartition {
    country: ShortCountry!
    value: String!
}

type ShortCountry {
    name: String!
    iso: String!
    flag: String!
}

type ImpactMetrics {
    sdgs: [Sdg!]!
    removed_tons: String!
    protected_forest: String!
    protected_species: String!
}

type PaginationObject {
    max_page: Int!
    page_number: Int!
    count: Int!
}

input Pagination {
    page: Int
    count: Int
}
